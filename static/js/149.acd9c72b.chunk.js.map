{"version":3,"file":"static/js/149.acd9c72b.chunk.js","mappings":"kNAkCA,EA/BmB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACpB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAgBA,OACE,gBAAKH,SAXc,SAAAI,GACnBA,EAAMC,iBACDH,GAILF,EAASE,GACTC,EAAS,KAJPG,MAAM,kBAKT,EAGC,UACE,6BACE,kBAAOC,KAAK,OAAOC,SAjBJ,SAAAJ,GACnBD,EAASC,EAAMK,OAAOP,MACvB,KAgBK,mBAAQK,KAAK,SAAb,wBAIP,E,0BCmBD,EA1Ce,WACb,OAA0BN,EAAAA,EAAAA,UAAS,IAAnC,eAAOS,EAAP,KAAcC,EAAd,KACA,GAA0BV,EAAAA,EAAAA,UAAS,IAAnC,eAAOW,EAAP,KAAcC,EAAd,KACA,GAAuCC,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRC,EAAI,UAAGL,EAAaM,IAAI,eAApB,QAA+B,GACpCD,IAGLE,EAAAA,EAAAA,IAAcF,GACXG,MAAK,SAAAC,GACJb,EAASa,EACV,IACAC,OAAM,SAAAb,GACLC,EAASD,EAAMc,QAChB,GACJ,GAAE,CAACX,IAMJ,OACE,4BACE,SAAC,EAAD,CAAYf,SANC,SAAAoB,GACfJ,EAAe,CAAEI,KAAAA,GAClB,IAKIR,IAAS,mCAAWA,EAAX,oBACV,wBACGF,EAAMiB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACT,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMf,GAAlC,SACGY,KAFID,EADA,QAUlB,C,+LC3CDK,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMlB,EAAe,IAAImB,gBAAgB,CACvCC,OAAQ,MACRC,QAAS,mCACTC,SAAU,QACVC,eAAe,EACfC,QAAS,CACPC,OAAQ,sBAKCC,EAAW,mCAAG,0FACZ,sBADY,SAGFR,EAAAA,EAAAA,IAAA,UAFV,sBAEU,YAAqBlB,IAHnB,cAGnB2B,EAHmB,yBAKlBA,EAASlB,KAAKmB,SALI,2CAAH,qDAQXC,EAAW,mCAAG,WAAOhB,GAAP,gFACnBiB,EADmB,iBACFjB,GADE,SAGFK,EAAAA,EAAAA,IAAA,UAAaY,EAAb,YAAqB9B,IAHnB,cAGnB2B,EAHmB,yBAKlBA,EAASlB,MALS,2CAAH,sDAQXsB,EAAW,mCAAG,WAAOlB,GAAP,gFACnBiB,EADmB,iBACFjB,EADE,qBAGFK,EAAAA,EAAAA,IAAA,UAAaY,EAAb,YAAqB9B,IAHnB,cAGnB2B,EAHmB,yBAKlBA,EAASlB,KAAKuB,MALI,2CAAH,sDAQXC,EAAc,mCAAG,WAAOpB,GAAP,gFACtBiB,EADsB,iBACLjB,EADK,qBAGLK,EAAAA,EAAAA,IAAA,UAAaY,EAAb,YAAqB9B,IAHhB,cAGtB2B,EAHsB,yBAKrBA,EAASlB,KAAKmB,SALO,2CAAH,sDAQdrB,EAAa,mCAAG,WAAO2B,GAAP,6EACd,gBADc,SAGJhB,EAAAA,EAAAA,IAAA,UAFV,gBAEU,YAAqBlB,EAArB,kBAA2CkC,IAHvC,cAGrBP,EAHqB,yBAKpBA,EAASlB,KAAKmB,SALM,2CAAH,qD","sources":["components/SearchForm/SearchForm.jsx","pages/Movies.jsx","service-api/films-api.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!value) {\n      alert('Enter film name');\n      return;\n    }\n    onSubmit(value);\n    setValue('');\n  };\n\n  return (\n    <div onSubmit={handleSubmit}>\n      <form>\n        <input type=\"text\" onChange={handleChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import SearchForm from 'components/SearchForm/SearchForm';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getFilmByName } from 'service-api/films-api';\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  const [error, seterror] = useState('');\n  const [searchParams, setSeachParams] = useSearchParams();\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const film = searchParams.get('film') ?? '';\n    if (!film) {\n      return;\n    }\n    getFilmByName(film)\n      .then(data => {\n        setFilms(data);\n      })\n      .catch(error => {\n        seterror(error.message);\n      });\n  }, [searchParams]);\n\n  const onSubmit = film => {\n    setSeachParams({ film });\n  };\n\n  return (\n    <div>\n      <SearchForm onSubmit={onSubmit} />\n      {error && <p>Sorry. {error} ðŸ˜­</p>}\n      <ul>\n        {films.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst searchParams = new URLSearchParams({\n  method: 'GET',\n  api_key: 'd03c893f0ef0ef1618c3413e2cb11b8a',\n  language: 'en-US',\n  include_adult: false,\n  headers: {\n    accept: 'application/json',\n  },\n});\n\n\nexport const getAllFilms = async () => {\n  const path = '/trending/movie/day';\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.results;\n};\n\nexport const getFilmById = async (id) => {\n  const path = `/movie/${id}`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data;\n};\n\nexport const getFilmCast = async (id) => {\n  const path = `/movie/${id}/credits`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.cast;\n};\n\nexport const getFilmReviews = async (id) => {\n  const path = `/movie/${id}/reviews`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.results;\n};\n\nexport const getFilmByName = async (query) => {\n  const path = '/search/movie';\n\n  const response = await axios.get(`${path}?${searchParams}&query=${query}`);\n\n  return response.data.results;\n};"],"names":["onSubmit","useState","value","setValue","event","preventDefault","alert","type","onChange","target","films","setFilms","error","seterror","useSearchParams","searchParams","setSeachParams","location","useLocation","useEffect","film","get","getFilmByName","then","data","catch","message","map","id","title","to","state","from","axios","URLSearchParams","method","api_key","language","include_adult","headers","accept","getAllFilms","response","results","getFilmById","path","getFilmCast","cast","getFilmReviews","query"],"sourceRoot":""}