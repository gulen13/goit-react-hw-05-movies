{"version":3,"file":"static/js/257.7d362e4e.chunk.js","mappings":"6PAGaA,GAAUC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,iLAUPE,EAAMF,EAAAA,EAAAA,IAAH,+JASHG,EAAOH,EAAAA,EAAAA,IAAH,iGAMJI,EAAIJ,EAAAA,EAAAA,EAAH,kE,SC+Cd,EArEqB,WAAO,IAAD,IACzB,GAAwBK,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAEJE,EAAS,GACTC,EAAS,GAGPC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAiB7C,OAfAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAYT,GAAIU,MAAK,SAAAC,GACnBZ,EAAQY,EACT,GACF,GAAE,CAACX,IAEAF,IACFI,EAASJ,EAAKc,YAAL,0CAC8Bd,EAAKc,aACxC,6DACJT,EAASL,EAAKK,OACVL,EAAKK,OAAOU,KAAI,SAAAf,GAAI,OAAIA,EAAKgB,IAAT,IAAeC,KAAK,MACxC,+BAIJjB,IACE,4BACE,SAACP,EAAD,CAASyB,GAAIZ,EAAb,sBACA,UAACV,EAAD,YACE,gBAAKuB,IAAKf,EAAQgB,IAAKpB,EAAKqB,MAAOC,MAAM,SACzC,UAACzB,EAAD,YACE,0BACGG,EAAKqB,MADR,KAEGrB,EAAKuB,aACFvB,EAAKuB,aAAaC,MAAM,EAAG,GAC3BxB,EAAKuB,aAJX,QAOA,wCAAgBE,KAAKC,MAA0B,GAApB1B,EAAK2B,cAAhC,QACA,SAAC7B,EAAD,wBACA,uBAAIE,EAAK4B,YACT,SAAC9B,EAAD,sBACA,uBAAIO,WAGR,mBACA,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMa,GAAG,OAAOV,MAAO,CAAEC,KAAMH,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMY,GAAG,UAAUV,MAAO,CAAEC,KAAMH,GAAlC,2BAKJ,mBACA,SAAC,EAAAuB,SAAD,CAAUC,UAAU,6CAApB,UACE,SAAC,KAAD,QAKT,C,+LCvEDC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAe,IAAIC,gBAAgB,CACvCC,OAAQ,MACRC,QAAS,mCACTC,SAAU,QACVC,eAAe,EACfC,QAAS,CACPC,OAAQ,sBAKCC,EAAW,mCAAG,0FACZ,sBADY,SAGFT,EAAAA,EAAAA,IAAA,UAFV,sBAEU,YAAqBC,IAHnB,cAGnBS,EAHmB,yBAKlBA,EAAS5B,KAAK6B,SALI,2CAAH,qDAQX/B,EAAW,mCAAG,WAAOT,GAAP,gFACnByC,EADmB,iBACFzC,GADE,SAGF6B,EAAAA,EAAAA,IAAA,UAAaY,EAAb,YAAqBX,IAHnB,cAGnBS,EAHmB,yBAKlBA,EAAS5B,MALS,2CAAH,sDAQX+B,EAAW,mCAAG,WAAO1C,GAAP,gFACnByC,EADmB,iBACFzC,EADE,qBAGF6B,EAAAA,EAAAA,IAAA,UAAaY,EAAb,YAAqBX,IAHnB,cAGnBS,EAHmB,yBAKlBA,EAAS5B,KAAKgC,MALI,2CAAH,sDAQXC,EAAc,mCAAG,WAAO5C,GAAP,gFACtByC,EADsB,iBACLzC,EADK,qBAGL6B,EAAAA,EAAAA,IAAA,UAAaY,EAAb,YAAqBX,IAHhB,cAGtBS,EAHsB,yBAKrBA,EAAS5B,KAAK6B,SALO,2CAAH,sDAQdK,EAAa,mCAAG,WAAOC,GAAP,6EACd,gBADc,SAGJjB,EAAAA,EAAAA,IAAA,UAFV,gBAEU,YAAqBC,EAArB,kBAA2CgB,IAHvC,cAGrBP,EAHqB,yBAKpBA,EAAS5B,KAAK6B,SALM,2CAAH,qD","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","service-api/films-api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const LinkStl = styled(Link)`\n  color: black;\n  font-size: large;\n  margin: 10px;\n  text-decoration: none;\n  border: 1px solid black;\n  padding: 4px 4px;\n  border-radius: 6px;\n`;\n\nexport const Div = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 12px;\n  padding: 16px 0;\n  margin-bottom: 16px;\n`;\n\nexport const Div2 = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nexport const P = styled.p`\n  font-size: large;\n  font-weight: 700;\n`;\n","import React, { useState, Suspense } from 'react';\nimport { useEffect } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getFilmById } from 'service-api/films-api';\nimport { Div, Div2, LinkStl, P } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [film, setfilm] = useState({});\n  const { id } = useParams();\n\n  let poster = '';\n  let genres = '';\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getFilmById(id).then(data => {\n      setfilm(data);\n    });\n  }, [id]);\n\n  if (film) {\n    poster = film.poster_path\n      ? `https://image.tmdb.org/t/p/w500/${film.poster_path}`\n      : 'https://dummyimage.com/150x200/aba46f/0011ff.jpg&text=Film';\n    genres = film.genres\n      ? film.genres.map(film => film.name).join(', ')\n      : 'No information about genres';\n  }\n\n  return (\n    film && (\n      <div>\n        <LinkStl to={backLinkHref}>Go Back</LinkStl>\n        <Div>\n          <img src={poster} alt={film.title} width=\"300\" />\n          <Div2>\n            <h1>\n              {film.title} (\n              {film.release_date\n                ? film.release_date.slice(0, 4)\n                : film.release_date}\n              )\n            </h1>\n            <p>User Score: {Math.round(film.vote_average * 10)}%</p>\n            <P>Overview</P>\n            <p>{film.overview}</p>\n            <P>Genres</P>\n            <p>{genres}</p>\n          </Div2>\n        </Div>\n        <hr />\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: backLinkHref }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: backLinkHref }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <hr />\n        <Suspense fallback={<div>Loading page...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    )\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst searchParams = new URLSearchParams({\n  method: 'GET',\n  api_key: 'd03c893f0ef0ef1618c3413e2cb11b8a',\n  language: 'en-US',\n  include_adult: false,\n  headers: {\n    accept: 'application/json',\n  },\n});\n\n\nexport const getAllFilms = async () => {\n  const path = '/trending/movie/day';\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.results;\n};\n\nexport const getFilmById = async (id) => {\n  const path = `/movie/${id}`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data;\n};\n\nexport const getFilmCast = async (id) => {\n  const path = `/movie/${id}/credits`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.cast;\n};\n\nexport const getFilmReviews = async (id) => {\n  const path = `/movie/${id}/reviews`;\n\n  const response = await axios.get(`${path}?${searchParams}`);\n\n  return response.data.results;\n};\n\nexport const getFilmByName = async (query) => {\n  const path = '/search/movie';\n\n  const response = await axios.get(`${path}?${searchParams}&query=${query}`);\n\n  return response.data.results;\n};"],"names":["LinkStl","styled","Link","Div","Div2","P","useState","film","setfilm","id","useParams","poster","genres","backLinkHref","useLocation","state","from","useEffect","getFilmById","then","data","poster_path","map","name","join","to","src","alt","title","width","release_date","slice","Math","round","vote_average","overview","Suspense","fallback","axios","searchParams","URLSearchParams","method","api_key","language","include_adult","headers","accept","getAllFilms","response","results","path","getFilmCast","cast","getFilmReviews","getFilmByName","query"],"sourceRoot":""}